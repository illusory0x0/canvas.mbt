package "illusory0x0/canvas/cache"

// Values

// Types and methods
type Node[A]
impl Node {
  add_dependents[A](Self[A], Array[&VNode]) -> Unit
  depend_on[A](Self[A], &VNode) -> Unit
  from_fun[A](() -> A) -> Self[A]
  from_val[A](A) -> Self[A]
  get[A](Self[A]) -> A
  map[A, B](Self[A], (A) -> B) -> Self[B]
  modify[A : Eq](Self[A], (A) -> A) -> Unit
  set[A : Eq](Self[A], A) -> Unit
  sync[A](Self[A]) -> Unit
}
impl[A] VNode for Node[A]
impl[A] Compare for Node[A]
impl[A] Eq for Node[A]
impl[A : Show] Show for Node[A]

impl VNode {
  dirty(&Self) -> Unit
}
impl Compare for &VNode
impl Eq for &VNode

// Type aliases

// Traits
trait VNode

